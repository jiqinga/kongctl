name: Continuous Integration

env:
  GO_VERSION: 1.25.x

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
  pull_request:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
#          - windows-latest

    name: ci - ${{matrix.os}}
    runs-on: ${{matrix.os}}
    env:
      GOFLAGS: -mod=vendor
    steps:
      - name: 检查代码
        uses: actions/checkout@v4
      - name: 设置go版本
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 构建缓存
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{runner.os}}-go-${{hashFiles('**/go.sum')}}-test
          restore-keys: |
            ${{runner.os}}-go-
      - name: 校验模块一致性 (tidy / vendor)
        run: |
          go mod tidy
          git diff --exit-code || (echo "go.mod/go.sum 需更新，请执行 'go mod tidy' 并提交" && exit 1)
          if [ -d vendor ]; then
            go mod vendor
            git diff --exit-code || (echo "vendor 目录需更新，请执行 'go mod vendor' 并提交" && exit 1)
          fi
      - name: 静态检查 (go vet)
        run: go vet -mod=mod ./...
      - name: 运行测试
        run: go test ./... -count=1 -timeout=5m
      - name: 准备 dist 目录
        run: mkdir -p dist
      - name: 构建 Linux 二进制
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X kongctl/internal/cli.version=${{ github.sha }}" -o dist/kongctl-linux-amd64 ./cmd/kongctl
      - name: 构建 macOS 二进制
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X kongctl/internal/cli.version=${{ github.sha }}" -o dist/kongctl-darwin-amd64 ./cmd/kongctl
      - name: 构建 Windows 二进制
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X kongctl/internal/cli.version=${{ github.sha }}" -o dist/kongctl-windows-amd64.exe ./cmd/kongctl


