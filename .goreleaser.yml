# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
version: 2

project_name: kongctl

env:
  - CGO_ENABLED=0
  - GO111MODULE=auto

builds:
  - id: kongctl
    main: ./cmd/kongctl
    binary: kongctl
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X kongctl/internal/cli.version={{.Version}}
    goos: [linux, darwin, windows]
    goarch: [amd64, arm64]
    ignore:
      - goos: windows
        goarch: arm64
    flags: []
#     goarm:
#       - 7
#     ldflags:
#       - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.buildSource=binaryRelease
#  - id: snap
#    goos:
#      - linux
#    goarch:
#      - amd64
#      - arm
#      - arm64
#      - 386
#    ldflags:
#      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.buildSource=snap

archives:
  - builds:
      - binary
#     name_template: >
#       kube-prompt_{{ .Version }}_{{- title .Os }}_
#       {{- if eq .Arch "amd64" }}x86_64
#       {{- else if eq .Arch "386" }}i386
#       {{- else }}{{ .Arch }}{{ end -}}
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
    builds_info:
      group: root
      owner: root
    files:
      - LICENSE
      - README.md

#upx:
#  - enabled: true
##    compress: best
#    compress: 9
#    lzma: true
checksum:
  name_template: "checksums_{{ .Version }}.txt"

snapshot:
  version_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  use: github
  groups:
    - title: "✨ 新功能"
      regexp: "^feat"
    - title: "🐛 修复"
      regexp: "^fix"
    - title: "📚 文档"
      regexp: "^docs"
    - title: "🧪 测试"
      regexp: "^test"
    - title: "🧹 重构/维护"
      regexp: "^(refactor|chore)"
    - title: "⚙️ CI"
      regexp: "^ci"
    - title: Dependency updates
      regexp: '^.*?(.+)\(deps\)!?:.+$'
      order: 300
    - title: "New Features"
      regexp: '^.*?(feat|新功能|add)(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?(fix|refactor|bug)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: '^.*?docs?(\(.+\))??!?:.+$'
      order: 400
    - title: "Build process updates"
      regexp: '^.*?(build|ci)(\(.+\))??!?:.+$'
      order: 400
    - title: Other work
      order: 9999
  filters:
    exclude:
#      - "^docs:"
      - "^test:"
      - "^bump"